*********************************************************************
Logfile _GeneratorLog.txt generated at: Tue Oct 05 09:06:46 CEST 2004
*********************************************************************


Processing ComponentInfoClass: 'org.glowa.danube.components.actor.tourist.Tourist'

Setting all contextfree token:
  ###outputDir### = src/
  ###componentPackageName### = org.glowa.danube.components.actor.tourist
  ###fileSeparator### = /
  ###componentPackagePath### = org/glowa/danube/components/actor/tourist/
  ###theDate### = Tue Oct 05 09:06:46 CEST 2004
  ###componentInformationClassName### = TouristInfo
  ###componentIdent### = tourist
  ###componentAuthor### = alex@dingel.org
  ###componentVersion### = 0.5.4
  ###componentDanubiaVersion### = 0.9.2
  ###componentDescription### = Das Tourismusmodell berechnet den touristischen Wasserverbrauch
  ###componentName### = Tourist

  Processing Template: 'templates/TestDummyTemplate.tpl'

  Call of the read-method with end condition: ''
    Processing Line: %%% Template fuer TestDummy
    Processing Line: ###importedInterfaces###
      Processing the importedInterfaces-token
    Setting the contextbound token:
      ###interfaceName### = ist
      ###interfacePackageName### = org.glowa.danube.components.actor.interfaces
  Call of the read-method with end condition: '###endImportedInterfaces###'
    Processing Line: 	###fileWriter###
      Processing the fileWriter-token
    Processing Line: 		###outputDir######componentPackagePath###test###fileSeparator######interfaceName###TestDummy.java
      Processing the fileWriter-destination
        Replacing '###outputDir###'
        Replacing '###componentPackagePath###'
        Replacing '###fileSeparator###'
        Replacing '###interfaceName###'
      Creating the file: 'src/org/glowa/danube/components/actor/tourist/test/istTestDummy.java'
    Processing Line: 	###endFileWriter###
    Processing Line: 
    Processing Line: 	// ###interfaceName###TestDummy.java generated by Generator at ###theDate###
        Replacing '###interfaceName###'
        Replacing '###theDate###'
    Processing Line: 
    Processing Line: 	package ###componentPackageName###.test;
        Replacing '###componentPackageName###'
    Processing Line: 
    Processing Line: 
    Processing Line: 	import org.glowa.danube.tables.*;
    Processing Line: 	import org.glowa.danube.simulation.*;
    Processing Line: 	import org.glowa.danube.space.*;
    Processing Line: 	import org.glowa.danube.datatypes.*;
    Processing Line: 	import org.glowa.danube.utilities.*;
    Processing Line: 
    Processing Line: 	import java.util.*;
    Processing Line: 
    Processing Line: 
    Processing Line: 	public class ###interfaceName###TestDummy extends org.glowa.danube.testenvironment.AbstractTestModel
        Replacing '###interfaceName###'
    Processing Line: 		implements ###interfacePackageName###.###interfaceName###
        Replacing '###interfacePackageName###'
        Replacing '###interfaceName###'
    Processing Line: 	{
    Processing Line: 	// PIDs for computation
    Processing Line: 	private int[] pids = null;
    Processing Line: 
    Processing Line: 
    Processing Line: %%% declare export tables
    Processing Line: 	###publicMethods###
      Processing the publicMethods-token
org.glowa.danube.utilities.templateengine.TemplateException: 
!!!The Class of this block?s Interface could not be found:
!!!java.lang.ClassNotFoundException: org.glowa.danube.components.actor.interfaces.ist

  Processing Template: 'templates/TestDummyInfoTemplate.tpl'

  Call of the read-method with end condition: ''
    Processing Line: %%% Template fuer TestDummy-Info-Klasse
    Processing Line: ###importedInterfaces###
      Processing the importedInterfaces-token
    Setting the contextbound token:
      ###interfaceName### = ist
      ###interfacePackageName### = org.glowa.danube.components.actor.interfaces
  Call of the read-method with end condition: '###endImportedInterfaces###'
    Processing Line: 	###fileWriter###
      Processing the fileWriter-token
    Processing Line: 		###outputDir######componentPackagePath###test###fileSeparator######interfaceName###TestDummyInfo.java
      Processing the fileWriter-destination
        Replacing '###outputDir###'
        Replacing '###componentPackagePath###'
        Replacing '###fileSeparator###'
        Replacing '###interfaceName###'
      Creating the file: 'src/org/glowa/danube/components/actor/tourist/test/istTestDummyInfo.java'
    Processing Line: 	###endFileWriter###
    Processing Line: 
    Processing Line: 	// ###interfaceName###TestDummyInfo.java generated by Generator at ###theDate###
        Replacing '###interfaceName###'
        Replacing '###theDate###'
    Processing Line: 
    Processing Line: 	package ###componentPackageName###.test;
        Replacing '###componentPackageName###'
    Processing Line: 
    Processing Line: 
    Processing Line: 
    Processing Line: 	import org.glowa.danube.simulation.*;
    Processing Line: 
    Processing Line: 	import java.awt.Color;
    Processing Line: 	import java.util.*;
    Processing Line: 
    Processing Line: 
    Processing Line: 
    Processing Line: 	public class ###interfaceName###TestDummyInfo implements ComponentInfo, java.io.Serializable
        Replacing '###interfaceName###'
    Processing Line: 	{
    Processing Line:   /**
    Processing Line:    * Get identifier of this component
    Processing Line:    */
    Processing Line:   public String getComponentIdent()
    Processing Line:   {
    Processing Line:     return "###interfaceName###-TestDummy";
        Replacing '###interfaceName###'
    Processing Line:   }
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get array of imported interfaces by this component
    Processing Line:    * A test dummy has no imported interfaces!
    Processing Line:    */
    Processing Line:   public String[] getImportedInterfaces()
    Processing Line:   {
    Processing Line:     return new String[]{};
    Processing Line:   }
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get array of exported interfaces by this component
    Processing Line:    * Exports only one interface to component being tested
    Processing Line:    */
    Processing Line:   public String[] getExportedInterfaces()
    Processing Line:   {
    Processing Line:     return new String[]
    Processing Line:     {
    Processing Line: 		"###componentPackageName###.###interfaceName###"
        Replacing '###componentPackageName###'
        Replacing '###interfaceName###'
    Processing Line:     };
    Processing Line:   }
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get array of result interfaces by this component
    Processing Line:    */
    Processing Line:   public String[] getResultInterfaces()
    Processing Line:   {
    Processing Line:     return new String[]
    Processing Line:     {
    Processing Line:     };
    Processing Line:   }
    Processing Line: 
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get author of this component
    Processing Line:    */
    Processing Line:   public String getAuthor()
    Processing Line:   {
    Processing Line:     return "TestDummyGenerator by Matthias Ludwig";
    Processing Line:   }
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get version of component
    Processing Line:    */
    Processing Line:   public String getComponentVersion()
    Processing Line:   {
    Processing Line:     return "0.2";
    Processing Line:   }
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get DANUBIA version of component
    Processing Line:    */
    Processing Line:   public String getDANUBIAVersion()
    Processing Line:   {
    Processing Line:     return "0.9.1";
    Processing Line:   }
    Processing Line: 
    Processing Line:   /**
    Processing Line:    * Get description of component
    Processing Line:    */
    Processing Line:   public String getDescription()
    Processing Line:   {
    Processing Line:     return "This is a test dummy implementation for the ###interfaceName### interface";
        Replacing '###interfaceName###'
    Processing Line:   }
    Processing Line: 
    Processing Line: 
    Processing Line: 	}
    Processing Line: ###endImportedInterfaces###
      Processing the endImportedInterfaces-token
  Finished processing 'templates/TestDummyInfoTemplate.tpl'

  Processing Template: 'templates/GeneratorCall.tpl'

  Call of the read-method with end condition: ''
    Processing Line: %%% Template zur Ausgabe der generierten Klassennamen
    Processing Line: 	###fileWriter###
      Processing the fileWriter-token
    Processing Line: 		.###fileSeparator###testcomponents.txt
      Processing the fileWriter-destination
        Replacing '###fileSeparator###'
      Creating the file: './testcomponents.txt'
    Processing Line: 	###endFileWriter###
    Processing Line: ###componentPackageName###.###componentName###
        Replacing '###componentPackageName###'
        Replacing '###componentName###'
    Processing Line: ###importedInterfaces###
      Processing the importedInterfaces-token
    Setting the contextbound token:
      ###interfaceName### = ist
      ###interfacePackageName### = org.glowa.danube.components.actor.interfaces
  Call of the read-method with end condition: '###endImportedInterfaces###'
    Processing Line: ###componentPackageName###.test.###interfaceName###TestDummy
        Replacing '###componentPackageName###'
        Replacing '###interfaceName###'
    Processing Line: ###endImportedInterfaces###
      Processing the endImportedInterfaces-token
  Finished processing 'templates/GeneratorCall.tpl'

Finished processing 'org.glowa.danube.components.actor.tourist.Tourist'

